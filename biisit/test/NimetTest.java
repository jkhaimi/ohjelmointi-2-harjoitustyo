package biisit.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import biisit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.04.22 13:56:18 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class NimetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa48 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa48() throws SailoException {    // Nimet: 48
    Nimet nimet = new Nimet(); 
    Nimi ibe = new Nimi(); 
    Nimi Melo = new Nimi(); 
    assertEquals("From: Nimet line: 53", 0, nimet.getLkm()); 
    nimet.lisaa(ibe); assertEquals("From: Nimet line: 54", 1, nimet.getLkm()); 
    nimet.lisaa(Melo); assertEquals("From: Nimet line: 55", 2, nimet.getLkm()); 
    nimet.lisaa(ibe); assertEquals("From: Nimet line: 56", 3, nimet.getLkm()); 
    assertEquals("From: Nimet line: 57", ibe, nimet.anna(0)); 
    assertEquals("From: Nimet line: 58", Melo, nimet.anna(1)); 
    assertEquals("From: Nimet line: 59", ibe, nimet.anna(2)); 
    assertEquals("From: Nimet line: 60", false, nimet.anna(1) == ibe); 
    assertEquals("From: Nimet line: 61", true, nimet.anna(1) == Melo); 
    try {
    assertEquals("From: Nimet line: 62", ibe, nimet.anna(3)); 
    fail("Nimet: 62 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    nimet.lisaa(ibe); assertEquals("From: Nimet line: 63", 4, nimet.getLkm()); 
    nimet.lisaa(ibe); assertEquals("From: Nimet line: 64", 5, nimet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi190 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi190() throws SailoException {    // Nimet: 190
    Nimet nimet = new Nimet(); 
    Nimi nimi1 = new Nimi(); nimi1.parse("1 | Mazza | slowthai & A$AP Rocky |"); 
    Nimi nimi2 = new Nimi(); nimi1.parse("2 | Mazza | slowthai & A$AP Rocky |"); 
    Nimi nimi3 = new Nimi(); nimi1.parse("3 | Mazza | slowthai & A$AP Rocky |"); 
    Nimi nimi4 = new Nimi(); nimi1.parse("4 | Mazza | slowthai & A$AP Rocky |"); 
    Nimi nimi5 = new Nimi(); nimi1.parse("5 | Mazza | slowthai & A$AP Rocky |"); 
    nimet.lisaa(nimi1); 
    nimet.lisaa(nimi2); 
    nimet.lisaa(nimi3); 
    nimet.lisaa(nimi4); 
    nimet.lisaa(nimi5); 
  } // Generated by ComTest END
}